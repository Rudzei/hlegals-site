/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  font-weight:bold;
  font-style:normal;
  src:url("TTNorms-Bold.eot");
  src:local("TT Norms Bold"), local("TTNorms-Bold"), url("../fonts/TTNorms-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Bold.woff2") format("woff2"), url("../fonts/TTNorms-Bold.woff") format("woff"), url("../fonts/TTNorms-Bold.ttf") format("truetype");
}
@font-face{
  font-family:"TT Norms";
  font-weight:500;
  font-style:normal;
  src:url("TTNorms-Medium.eot");
  src:local("TT Norms Medium"), local("TTNorms-Medium"), url("../fonts/TTNorms-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Medium.woff2") format("woff2"), url("../fonts/TTNorms-Medium.woff") format("woff"), url("../fonts/TTNorms-Medium.ttf") format("truetype");
}
@font-face{
  font-family:"TT Norms";
  font-weight:normal;
  font-style:normal;
  src:url("TTNorms-Regular.eot");
  src:local("TT Norms Regular"), local("TTNorms-Regular"), url("../fonts/TTNorms-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Regular.woff2") format("woff2"), url("../fonts/TTNorms-Regular.woff") format("woff"), url("../fonts/TTNorms-Regular.ttf") format("truetype");
}
.services__container, .experiance__container, .page-header__grid{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}

.slider__header.active span{
  background:linear-gradient(90.13deg, #EF8080 0.84%, #F0145A 99.96%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
}

.services__title{
  background:linear-gradient(90.13deg, #F0145A 0.84%, #EF8080 99.96%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
}
*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"TT Norms", sans-serif;
  font-size:16px;
}

body{
  line-height:1.2;
}
body.active{
  overflow:hidden;
  transform:translateX(-170px);
}
body.active::before{
  content:"";
  position:absolute;
  z-index:2;
  top:0;
  left:0;
  width:100vw;
  height:100vh;
  background-color:rgba(0, 0, 0, 0.75);
}

a{
  text-decoration:none;
  color:#24A3FF;
}

.container{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}

.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

.page-header{
  position:relative;
  background:linear-gradient(42.01deg, #323264 14.33%, #323264 51.39%, #7A425E 87.53%);
  max-width:100%;
}
.page-header::after{
  content:"";
  background:linear-gradient(to top, #323264 0%, transparent 100%);
  position:absolute;
  top:70%;
  right:0;
  bottom:0;
  left:0;
}
.page-header__grid{
  position:absolute;
  z-index:3;
  top:0;
  left:0;
  right:0;
  display:grid;
  grid-template-columns:auto 1fr;
  gap:20px;
}
.page-header__logo{
  grid-area:logo;
}
.page-header__menu{
  grid-area:menu;
}
.page-header__actions{
  grid-area:actions;
}
.page-header__content{
  position:relative;
  min-height:100vh;
  display:flex;
  align-items:center;
  justify-content:center;
}
.page-header__content-title{
  position:relative;
  z-index:1;
  margin:0;
  font-size:38px;
  text-align:center;
  color:#FFFFFF;
  max-width:640px;
  padding:20px;
  font-weight:500;
}
.page-header__content-image{
  position:absolute;
  bottom:0;
}
.page-header__button{
  position:absolute;
  z-index:4;
  top:92%;
  right:0;
  left:0;
  text-align:center;
}

.menu__btn{
  width:30px;
  height:25px;
  position:relative;
  margin:25px 0 25px auto;
  transform:rotate(0deg);
  transition:0.5s ease-in-out;
  cursor:pointer;
}
.menu__btn span{
  display:block;
  position:absolute;
  height:3px;
  width:50%;
  background:#FFFFFF;
  opacity:1;
  transform:rotate(0deg);
  transition:0.25s ease-in-out;
}
.menu__btn span:nth-child(even){
  left:50%;
  border-radius:0 3px 3px 0;
}
.menu__btn span:nth-child(odd){
  left:0px;
  border-radius:3px 0 0 3px;
}
.menu__btn span:nth-child(1), .menu__btn span:nth-child(2){
  top:0px;
}
.menu__btn span:nth-child(3), .menu__btn span:nth-child(4){
  top:9px;
}
.menu__btn span:nth-child(5), .menu__btn span:nth-child(6){
  top:18px;
}
.menu__btn.active span:nth-child(1), .menu__btn.active span:nth-child(6){
  transform:rotate(45deg);
}
.menu__btn.active span:nth-child(2), .menu__btn.active span:nth-child(5){
  transform:rotate(-45deg);
}
.menu__btn.active span:nth-child(1){
  left:2.5px;
  top:3.5px;
}
.menu__btn.active span:nth-child(2){
  left:calc(50% - 2.5px);
  top:3.5px;
}
.menu__btn.active span:nth-child(3){
  left:-50%;
  opacity:0;
}
.menu__btn.active span:nth-child(4){
  left:100%;
  opacity:0;
}
.menu__btn.active span:nth-child(5){
  left:2.5px;
  top:14.5px;
}
.menu__btn.active span:nth-child(6){
  left:calc(50% - 2.5px);
  top:14.5px;
}
.menu__list{
  display:flex;
  justify-content:flex-end;
  gap:15px;
  margin:0;
  padding:0;
  list-style:none;
}
.menu__list.active{
  display:block;
}
.menu__link{
  font-size:18px;
  color:#FFFFFF;
}
.menu__link:hover{
  color:#F0145A;
}

.actions{
  display:flex;
  gap:20px;
  align-items:center;
}
.actions__languages{
  display:flex;
}
.actions__languages-link{
  font-weight:700;
  font-size:12px;
  letter-spacing:1px;
  color:inherit;
  display:block;
  padding:5px;
  border-radius:8px;
}
.actions__languages-link.-active{
  background-color:#F0145A;
  color:#FFFFFF;
}
.actions__languages-link:hover{
  background:#F0145A;
}
.actions__locations{
  font-style:normal;
}
.actions__locations-link{
  color:inherit;
  transition:0.2s linear;
}
.actions__locations:hover{
  color:#F0145A;
}
.actions__phones-link{
  font-weight:700;
  color:inherit;
  transition:0.2s linear;
}
.actions__phones:hover{
  color:#F0145A;
}
.actions__socials-image{
  transition:0.2s linear;
}
.actions__socials-image:hover{
  fill:#F0145A;
}

.experiance{
  background-color:#323264;
}
.slider{
  display:flex;
  color:#FFFFFF;
}
.slider__headers{
  position:relative;
  flex-basis:0;
  flex-grow:2;
  display:flex;
  flex-direction:column;
  gap:20px;
}
.slider__header{
  position:relative;
  user-select:none;
  color:#B3B3BA;
  font-weight:700;
}
.slider__notes{
  flex-basis:0;
  flex-grow:3;
  display:flex;
  align-items:center;
}
.slider__note{
  position:absolute;
  z-index:-1;
  opacity:0;
  max-width:600px;
}
.slider__note.active{
  position:static;
  z-index:inherit;
  opacity:1;
}
.slider__note-title{
  font-weight:500;
  margin-bottom:15px;
}
.slider__note-description{
  line-height:1.43;
}
.slider__indicators{
  display:flex;
  justify-content:center;
  gap:14px;
}
.slider__indicator{
  width:16px;
  height:16px;
  border-radius:8px;
  opacity:0.2;
  background-color:#24A3FF;
}
.slider__indicator.active{
  opacity:1;
}

.services{
  position:relative;
  background:linear-gradient(215.57deg, #323264 11.93%, #323264 57.17%, #643E72 87.46%);
  border-radius:0px 0px 12px 12px;
  margin-bottom:60px;
}
.services:before{
  content:"";
  position:absolute;
  top:100%;
  right:40px;
  left:40px;
  height:20px;
  border-radius:0px 0px 12px 12px;
  background-color:#E6E6F0;
}
.services:after{
  content:"";
  position:absolute;
  top:100%;
  right:20px;
  left:20px;
  height:10px;
  border-radius:0px 0px 12px 12px;
  background-color:#B3B3BA;
}
.services__page-link{
  letter-spacing:1px;
  text-transform:uppercase;
  opacity:0.5;
  color:#FFFFFF;
  font-size:14px;
  font-weight:500;
  transition:0.2s linear;
}
.services__page-link::after{
  position:absolute;
  top:4px;
  bottom:0;
  max-height:13px;
  margin-left:5px;
  padding-right:10px;
  content:"";
  background-image:url(../img/arrow-gray.svg);
  background-repeat:no-repeat;
}
.services__page-link:hover{
  color:#F0145A;
}
.services__title{
  font-size:42px;
  margin-bottom:68px;
}
.services__grid{
  display:grid;
  padding-bottom:76px;
  gap:58px 54px;
}

.services-item__content{
  display:flex;
}
.services-item__image{
  width:92px;
  height:92px;
}
.services-item__title{
  font-weight:500;
  font-size:24px;
  order:1;
  color:#24A3FF;
}
.services-item__description{
  font-size:18px;
  color:#FFFFFF;
}
@media (min-width: 576px){
  .services-item__content{
    flex-direction:column;
    margin-bottom:15px;
    gap:20px;
  }
}
@media (min-width: 768px){
  .page-header__grid{
    padding-top:50px;
    grid-template-areas:"logo actions" "logo menu";
  }
  .menu__btn{
    display:none;
  }
  .actions{
    color:#FFFFFF;
    justify-content:flex-end;
  }
}
@media (min-width: 992px){
  .page-header::before{
    content:"";
    background-image:url(../img/Frame2.svg);
    background-size:85vh;
    background-repeat:no-repeat;
    background-position:center 100%;
    position:absolute;
    top:0;
    right:0;
    bottom:0;
    left:0;
  }
  .page-header__content-image{
    height:63vh;
  }
  .experiance{
    padding-top:80px;
    padding-bottom:80px;
  }
  .slider{
    gap:80px;
  }
  .slider__headers:after{
    content:"";
    position:absolute;
    right:-42px;
    top:0;
    width:4px;
    height:100%;
    background-color:#E6E6F0;
  }
  .slider__header{
    text-align:right;
    font-size:42px;
  }
  .slider__header.active:after{
    content:"";
    position:absolute;
    right:-42px;
    top:0;
    width:4px;
    height:100%;
    background-color:#F0145A;
    z-index:1;
  }
  .slider__note-title{
    font-size:32px;
  }
  .slider__note-description{
    font-size:21px;
  }
  .slider__indicators{
    display:none;
  }
  .services__grid{
    grid-template-columns:1fr 1fr 1fr;
  }
}
@media (max-width: 991.8px){
  .page-header__content-image{
    height:67vh;
  }
  .experiance{
    padding-top:40px;
    padding-bottom:45px;
  }
  .slider{
    flex-direction:column;
    gap:20px;
  }
  .slider__header{
    display:none;
    font-size:14px;
    text-transform:uppercase;
    letter-spacing:1px;
  }
  .slider__header.active{
    display:block;
  }
  .slider__note-title{
    font-size:22px;
  }
  .slider__note-description{
    font-size:18px;
  }
  .services__page-link::after{
    top:4px;
  }
}
@media (max-width: 991.8px) and (min-width: 576px){
  .services__grid{
    grid-template-columns:1fr 1fr;
  }
}
@media (max-width: 767.8px){
  .page-header__grid{
    grid-template-areas:"actions actions" "logo menu";
    padding-top:20px;
  }
  .menu__list{
    display:none;
    position:absolute;
    top:0;
    background-color:#323264;
    right:-190px;
    width:170px;
    height:100vh;
    padding:20px;
  }
  .actions{
    color:#B3B3BA;
    justify-content:space-between;
  }
  .actions__locations{
    display:none;
  }
  .actions__socials{
    display:none;
  }
  .services__title{
    font-size:32px;
    margin-bottom:20px;
  }
  .services-item__description{
    font-size:16px;
  }
}
@media (max-width: 575.8px){
  .services{
    margin-bottom:40px;
  }
  .services__grid{
    gap:40px 40px;
  }
  .services-item__content{
    align-items:center;
    margin-bottom:10px;
    gap:10px;
  }
  .services-item__image{
    width:64px;
    height:64px;
  }
  .services-item__title{
    font-size:18px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */